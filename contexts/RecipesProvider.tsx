"use client";

import React, { createContext, useContext, useState } from "react";
import type { Recipe, Book } from "@/lib/types";

// ðŸŽ¯ Quelques recettes d'exemple pour commencer
const initialRecipes: Recipe[] = [
  {
    id: "r1",
    title: "PÃ¢tes au pesto maison",
    description: "Un classique simple et savoureux",
    imageUrl: "https://images.unsplash.com/photo-1621389508051-d7ffb5dc8bbf?q=80&w=1200",
    ingredients: [
      "200g de pÃ¢tes",
      "50g de basilic frais",
      "50g de pignons de pin",
      "100g de parmesan rÃ¢pÃ©",
      "100ml d'huile d'olive",
      "2 gousses d'ail",
      "Sel et poivre"
    ],
    steps: `1. Faire cuire les pÃ¢tes dans une grande casserole d'eau salÃ©e selon les instructions du paquet.

2. Pendant ce temps, mixer le basilic, les pignons, l'ail et le parmesan avec l'huile d'olive jusqu'Ã  obtenir une pÃ¢te lisse.

3. Ã‰goutter les pÃ¢tes en gardant un peu d'eau de cuisson.

4. MÃ©langer les pÃ¢tes avec le pesto, ajouter un peu d'eau de cuisson si nÃ©cessaire.

5. Servir immÃ©diatement avec du parmesan supplÃ©mentaire.`,
    author: "Mamie Jeanne",
    prepMinutes: 20,
    tags: ["italien", "vÃ©gÃ©tarien", "rapide"],
    createdAt: Date.now() - 86400000 // Il y a 1 jour
  },
  {
    id: "r2",
    title: "Salade tomates-mozza",
    description: "FraÃ®cheur et simplicitÃ© pour l'Ã©tÃ©",
    imageUrl: "https://images.unsplash.com/photo-1512621776951-a57141f2eefd?q=80&w=1200",
    ingredients: [
      "4 belles tomates mÃ»res",
      "200g de mozzarella di bufala",
      "Quelques feuilles de basilic frais",
      "Huile d'olive extra vierge",
      "Sel de mer, poivre du moulin"
    ],
    steps: `1. Laver et trancher les tomates en rondelles Ã©paisses.

2. Ã‰goutter et trancher la mozzarella.

3. Alterner tomates et mozzarella sur une assiette.

4. Parsemer de feuilles de basilic ciselÃ©es.

5. Arroser d'huile d'olive, saler et poivrer.

6. Laisser reposer 10 minutes avant de servir.`,
    author: "Papa",
    prepMinutes: 10,
    tags: ["entrÃ©e", "Ã©tÃ©", "italien"],
    createdAt: Date.now() - 172800000 // Il y a 2 jours
  }
];

// ðŸ“š Un carnet d'exemple
const initialBooks: Book[] = [
  {
    id: "b1",
    title: "Recettes de famille",
    description: "Les meilleures recettes transmises de gÃ©nÃ©ration en gÃ©nÃ©ration",
    recipeIds: ["r1"], // Contient dÃ©jÃ  le pesto
    createdAt: Date.now() - 86400000
  }
];

type RecipesContextType = {
  // Recettes
  recipes: Recipe[];
  addRecipe: (title: string) => void;

  // Carnets
  books: Book[];
  createBook: (title: string) => void;
  addRecipeToBook: (bookId: string, recipeId: string) => void;
  removeRecipeFromBook: (bookId: string, recipeId: string) => void;
};

const RecipesContext = createContext<RecipesContextType | undefined>(undefined);

export function RecipesProvider({ children }: { children: React.ReactNode }) {
  const [recipes, setRecipes] = useState<Recipe[]>(initialRecipes);
  const [books, setBooks] = useState<Book[]>(initialBooks);

  // âž• Ajouter une nouvelle recette (basique pour l'instant)
  function addRecipe(title: string) {
    const trimmedTitle = title.trim();
    if (!trimmedTitle) return;

    const newRecipe: Recipe = {
      id: `r-${Date.now()}`,
      title: trimmedTitle,
      ingredients: [],
      steps: "",
      createdAt: Date.now()
    };

    setRecipes(prev => [newRecipe, ...prev]);
  }

  // ðŸ“š CrÃ©er un nouveau carnet
  function createBook(title: string) {
    const trimmedTitle = title.trim();
    if (!trimmedTitle) return;

    const newBook: Book = {
      id: `b-${Date.now()}`,
      title: trimmedTitle,
      recipeIds: [],
      createdAt: Date.now()
    };

    setBooks(prev => [newBook, ...prev]);
  }

  // âž• Ajouter une recette Ã  un carnet
  function addRecipeToBook(bookId: string, recipeId: string) {
    setBooks(prev =>
      prev.map(book =>
        book.id === bookId && !book.recipeIds.includes(recipeId)
          ? { ...book, recipeIds: [...book.recipeIds, recipeId], updatedAt: Date.now() }
          : book
      )
    );
  }

  // âž– Retirer une recette d'un carnet
  function removeRecipeFromBook(bookId: string, recipeId: string) {
    setBooks(prev =>
      prev.map(book =>
        book.id === bookId
          ? { 
              ...book, 
              recipeIds: book.recipeIds.filter(id => id !== recipeId),
              updatedAt: Date.now()
            }
          : book
      )
    );
  }

  return (
    <RecipesContext.Provider
      value={{
        recipes,
        addRecipe,
        updateRecipe,
        deleteRecipe,
        books,
        createBook,
        addRecipeToBook,
        removeRecipeFromBook,
      }}
    >
      {children}
    </RecipesContext.Provider>
  );
}

export function useRecipes() {
  const context = useContext(RecipesContext);
  if (!context) {
    throw new Error("useRecipes doit Ãªtre utilisÃ© dans un RecipesProvider");
  }
  return context;
}
